-- Find the 3rd highest total due from SalesOrderHeader, and return the entire order row.-- Sales.SalesOrderHeaderSelect * from Sales.SalesOrderHeader;Select * from (
		Select *, DENSE_RANK() Over (Order By TotalDue desc) AS rank
		From Sales.SalesOrderHeader) AS ranked_order
		Where rank = 3;--Find the 2nd lowest ListPrice among all products in the 'Mountain Bikes' subcategory.-- Select * from Production.Product   -- Select * From Production.ProductSubcategorySelect ListPrice
	From (
		Select p.ListPrice, DENSE_RANK() OVER (ORDER BY p.ListPrice asc) price_rank
    From Production.Product p
    INNER JOIN Production.ProductSubcategory ps
    ON p.ProductSubcategoryID = ps.ProductSubcategoryID
    where ps.Name = 'Mountain Bikes'
) AS ranked_products
	where price_rank = 2;--Find the employee with the 5th highest number of vacation hours. Show full name and vacation hours.-- Select * From HumanResources.Employee-- Select * From Person.PersonSelect FullName, VacationHoursFrom(Select Concat(P.FirstName, ISNULL(P.MiddleName+'', ' '),P.LastName) AS FullName, HE.VacationHours, Dense_Rank() Over (Order by					HE.VacationHours) as ranked			From Person.Person P			Inner Join HumanResources.Employee HE			ON P.BusinessEntityID = HE.BusinessEntityID) as ranked_employeesWhere ranked = 5;-- Among employees in each department, find the person with the 2nd highest vacation hours.-- Select * From HumanResources.Employee-- Select * From HumanResources.EmployeeDepartmentHistory-- Select * From HumanResources.Department-- Select * From Person.PersonSelect FullName, DepartmentName, VacationHours From	(Select concat(P.FirstName, ISnull(P.MiddleName+'', ' '), P.LastName) as FullName, HE.VacationHours, D.Name As DepartmentName, DENSE_RANK() Over (Partition By D.DepartmentID Order By VacationHours desc) as ranked_by_vacationhours	From Person.Person P 	Inner Join HumanResources.Employee HE	ON P.BusinessEntityID = HE.BusinessEntityID	Inner Join HumanResources.EmployeeDepartmentHistory EDH	ON HE.BusinessEntityID = EDH.BusinessEntityID	Inner Join HumanResources.Department D	On EDH.DepartmentID = D.DepartmentID) As Department_By_VacationHoursWhere ranked_by_vacationhours = 2;-- Find the customer who placed the 4th highest total number of orders.-- Select * From Sales.SalesOrderHeaderSelect CustomerID, Total_Num_Of_Orders From(	Select CustomerID, Count(CustomerID) AS Total_Num_Of_Orders, Dense_Rank() Over (Order By Count(CustomerID) desc) As order_ranked	From Sales.SalesOrderHeader 	Group By CustomerID) As Customer_OrderWhere order_ranked = 4;